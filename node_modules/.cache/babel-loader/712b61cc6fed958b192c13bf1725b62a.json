{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srikanth\\\\Downloads\\\\tsconfig\\\\src\\\\UI\\\\components\\\\IconButton\\\\IconButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textTransform: \"none\"\n  },\n  addbtn: {\n    backgroundColor: \"#3e9c5b\",\n    marginLeft: \"72px\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginLeft: \"64px\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"14px\"\n    },\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#3e9c5b\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      minHeight: \"1px\"\n    },\n    textTransform: \"none\"\n  },\n  diagbtn: {\n    textTransform: \"none\",\n    backgroundColor: \"#3e9c5b\",\n    marginLeft: \"53px\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#3e9c5b\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: \"-2px\"\n    }\n  }\n}));\n\nconst IconButton = ({\n  color,\n  icon,\n  children,\n  variant,\n  type,\n  handleClick,\n  btn\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: variant,\n      type: type,\n      color: color,\n      className: btn === \"btn\" ? classes.addbtn : btn === \"diagnosisbtn\" ? classes.diagbtn : classes.root,\n      startIcon: icon === \"left\" ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 46\n      }, this) : icon === \"circle\" ? /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 88\n      }, this) : null,\n      endIcon: icon === \"right\" ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }, this) : null,\n      onClick: handleClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(IconButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = IconButton;\nexport default IconButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconButton\");","map":{"version":3,"sources":["C:/Users/srikanth/Downloads/tsconfig/src/UI/components/IconButton/IconButton.tsx"],"names":["React","Button","makeStyles","ChevronLeftIcon","ChevronRightIcon","AddCircleIcon","useStyles","theme","root","textTransform","addbtn","backgroundColor","marginLeft","breakpoints","down","color","minHeight","diagbtn","IconButton","icon","children","variant","type","handleClick","btn","classes"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,aAAa,EAAE;AADb,GAD+B;AAIrCC,EAAAA,MAAM,EAAE;AACRC,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGR,KAACL,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,UAAU,EAAE;AADkB,KAHxB;AAMR,KAACL,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,UAAU,EAAE;AADkB,KANxB;AASRG,IAAAA,KAAK,EAAE,OATC;AAUR,eAAW;AACTJ,MAAAA,eAAe,EAAE;AADR,KAVH;AAaR,KAACJ,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BE,MAAAA,SAAS,EAAE;AADmB,KAbxB;AAgBRP,IAAAA,aAAa,EAAE;AAhBP,GAJ6B;AAuBvCQ,EAAAA,OAAO,EAAE;AACPR,IAAAA,aAAa,EAAE,MADR;AAEPE,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,UAAU,EAAE,MAHL;AAIPG,IAAAA,KAAK,EAAE,OAJA;AAKP,eAAW;AACTJ,MAAAA,eAAe,EAAE;AADR,KALJ;AAQP,KAACJ,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,UAAU,EAAE;AADkB;AARzB;AAvB8B,CAAZ,CAAD,CAA5B;;AAgDA,MAAMM,UAAsB,GAAG,CAAC;AAAEH,EAAAA,KAAF;AAASI,EAAAA,IAAT;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA,IAAlC;AAAwCC,EAAAA,WAAxC;AAAoDC,EAAAA;AAApD,CAAD,KAA+D;AAAA;;AAC1F,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEe,OADb;AAEI,MAAA,IAAI,EAAEC,IAFV;AAGI,MAAA,KAAK,EAAEP,KAHX;AAKI,MAAA,SAAS,EAAES,GAAG,KAAK,KAAR,GAAeC,OAAO,CAACf,MAAvB,GAAgCc,GAAG,KAAG,cAAN,GAAuBC,OAAO,CAACR,OAA/B,GAAyCQ,OAAO,CAACjB,IALhG;AAMI,MAAA,SAAS,EAAEW,IAAI,KAAK,MAAT,gBAAkB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAlB,GAAwCA,IAAI,KAAK,QAAT,gBAAoB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAApB,GAAwC,IAN/F;AAOI,MAAA,OAAO,EAAEA,IAAI,KAAK,OAAT,gBAAmB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAnB,GAA0C,IAPvD;AAQI,MAAA,OAAO,EAAEI,WARb;AAAA,gBAWKH;AAXL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiBH,CAnBD;;GAAMF,U;UACcZ,S;;;KADdY,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React, { FC } from 'react';\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textTransform: \"none\",\r\n    },\r\n    addbtn: {\r\n    backgroundColor: \"#3e9c5b\",\r\n    marginLeft: \"72px\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginLeft: \"64px\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"14px\",\r\n    },\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3e9c5b\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: \"1px\",\r\n    },\r\n    textTransform: \"none\",\r\n  },\r\n\r\n  diagbtn: {\r\n    textTransform: \"none\",\r\n    backgroundColor: \"#3e9c5b\",\r\n    marginLeft: \"53px\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3e9c5b\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"-2px\",\r\n    },\r\n  }\r\n}));\r\n\r\ninterface IProps {\r\n    children?: React.ReactNode;\r\n    color?: any;\r\n    type?: any;\r\n    variant?: any;\r\n    icon?: string;\r\n    handleClick?: (e: any) => any;\r\n    circleIcon?: any;\r\n    btn?:any\r\n}\r\n\r\nconst IconButton: FC<IProps> = ({ color, icon, children, variant, type, handleClick,btn }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Button\r\n                variant={variant}\r\n                type={type}\r\n                color={color}\r\n\r\n                className={btn === \"btn\"? classes.addbtn : btn===\"diagnosisbtn\" ? classes.diagbtn : classes.root }\r\n                startIcon={icon === \"left\" ? <ChevronLeftIcon /> : icon === \"circle\" ? <AddCircleIcon /> : null}\r\n                endIcon={icon === \"right\" ? <ChevronRightIcon /> : null}\r\n                onClick={handleClick}\r\n\r\n            >\r\n                {children}\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\nexport default IconButton;"]},"metadata":{},"sourceType":"module"}