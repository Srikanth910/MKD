{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srikanth\\\\Downloads\\\\tsconfig\\\\src\\\\components\\\\FormModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Dialog, DialogTitle, DialogContent, Typography, makeStyles, Button, Grid, MenuItem, Select, FormControl } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ProviderData from \"../pages/ProviderData.json\";\nimport InputField from \"../UI/components/TextField/InputField\";\nimport ButtonComponent from '../UI/components/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: \"100%\"\n  },\n  toolbarItem1: {\n    border: \"2px solid #dcd7d7\",\n    minHeight: \"32px\",\n    borderRadius: \"6px\",\n    backgroundColor: \"#edeef3\"\n  }\n}));\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    width: \"200px\",\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 14,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\n\nconst Formmodal = ({\n  open,\n  handleClose,\n  setmodalformdata,\n  modalformdata,\n  handleSubmit\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handlechange = (e, data) => {\n    console.log(data, \"data\");\n    setmodalformdata({ ...modalformdata,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            style: {\n              flexGrow: 1\n            },\n            children: [\"Enter Servicing Provinder of Facility Information\", /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                onClick: handleClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        style: {\n          minWidth: \"80rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.grid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            xs: 12,\n            spacing: 2,\n            children: ProviderData.map(input => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: input.type === \"Dropdown\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    direction: \"column\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        style: {\n                          fontWeight: 600\n                        },\n                        children: input.textlabel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: /*#__PURE__*/_jsxDEV(Select, {\n                          labelId: \"demo-customized-select-label\",\n                          id: \"demo-customized-select\",\n                          input: /*#__PURE__*/_jsxDEV(BootstrapInput, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 122,\n                            columnNumber: 40\n                          }, this),\n                          fullWidth: true,\n                          name: input.name,\n                          required: input.required,\n                          style: {\n                            width: \"100%\"\n                          },\n                          onChange: e => handlechange(e, data),\n                          children: input.list.map(item => {\n                            return /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: item.name,\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 132,\n                              columnNumber: 37\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 119,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      style: {\n                        fontWeight: 600\n                      },\n                      children: [input.textlabel, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 8,\n                    spacing: 1,\n                    children: /*#__PURE__*/_jsxDEV(InputField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      fullWidth: true,\n                      name: input.name,\n                      handleChange: e => handlechange(e, data)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            direction: \"row\",\n            spacing: 6,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n                color: \"primary\",\n                variant: \"contained\",\n                handleSubmit: handleSubmit,\n                children: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n                color: \"primary\",\n                variant: \"contained\",\n                handleSubmit: handleClose,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Formmodal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Formmodal;\nexport default Formmodal;\n\nfunction data(e, data) {\n  throw new Error(\"Function not implemented.\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Formmodal\");","map":{"version":3,"sources":["C:/Users/srikanth/Downloads/tsconfig/src/components/FormModal.tsx"],"names":["React","Dialog","DialogTitle","DialogContent","Typography","makeStyles","Button","Grid","MenuItem","Select","FormControl","withStyles","InputBase","CloseIcon","ProviderData","InputField","ButtonComponent","useStyles","theme","grid","width","toolbarItem1","border","minHeight","borderRadius","backgroundColor","BootstrapInput","root","marginTop","spacing","input","position","palette","background","paper","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","Formmodal","open","handleClose","setmodalformdata","modalformdata","handleSubmit","classes","handlechange","e","data","console","log","target","name","value","display","flexGrow","float","minWidth","map","type","fontWeight","textlabel","required","list","item","Error"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ProviderData from \"../pages/ProviderData.json\";\r\nimport InputField from \"../UI/components/TextField/InputField\";\r\nimport ButtonComponent from '../UI/components/Button/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    width: \"100%\",\r\n  },\r\n  toolbarItem1: {\r\n    border: \"2px solid #dcd7d7\",\r\n    minHeight: \"32px\",\r\n    borderRadius: \"6px\",\r\n    backgroundColor: \"#edeef3\",\r\n  },\r\n}));\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    width: \"200px\",\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 14,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\n\r\ninterface IPorps {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  setmodalformdata: (mainlist: string) => any;\r\n  modalformdata: any;\r\n  handleSubmit: () => void | object;\r\n}\r\nconst Formmodal: FC<IPorps> = ({ open, handleClose, setmodalformdata, modalformdata, handleSubmit }) => {\r\n  const classes = useStyles();\r\n\r\n  const handlechange = (e: { target: { value: any | undefined; name?: any | undefined; }; }, data: { name: string; }) => {\r\n   console.log(data,\"data\")\r\n    setmodalformdata({\r\n      ...modalformdata,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"lg\">\r\n        <DialogTitle>\r\n          <div style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n              Enter Servicing Provinder of Facility Information\r\n              <Button style={{ float: \"right\" }}>\r\n                <CloseIcon onClick={handleClose} />\r\n              </Button>\r\n            </Typography>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{ minWidth: \"80rem\" }}>\r\n          <div className={classes.grid}>\r\n            <Grid container direction=\"row\" xs={12} spacing={2}>\r\n              {ProviderData.map((input) => (\r\n                <>\r\n                  {input.type === \"Dropdown\" ? (\r\n                    <>\r\n                      <Grid item xs={4}>\r\n                        <Grid container direction=\"column\">\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"body1\"\r\n                              style={{ fontWeight: 600 }}\r\n                            >\r\n                              {input.textlabel}\r\n                            </Typography>\r\n                          </Grid>\r\n\r\n                          <Grid item>\r\n                            <FormControl>\r\n                              <Select\r\n                                labelId=\"demo-customized-select-label\"\r\n                                id=\"demo-customized-select\"\r\n                                input={<BootstrapInput />}\r\n                                fullWidth\r\n                                name={input.name}\r\n                                required={input.required}\r\n                                style={{ width: \"100%\" }}\r\n                                onChange={(e) => handlechange(e, data)}\r\n                                \r\n                              >\r\n                                {input.list.map((item) => {\r\n                                  return (\r\n                                    <MenuItem value={item.name}>\r\n                                      {item.name}\r\n                                    </MenuItem>\r\n                                  );\r\n                                })}\r\n                              </Select>\r\n                            </FormControl>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  ) : (\r\n                    <Grid item xs={4}>\r\n                      <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: 600 }}\r\n                          >\r\n                            {input.textlabel}:\r\n                          </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={8} spacing={1}>\r\n                          <InputField\r\n                           variant=\"outlined\"\r\n                            size=\"small\"\r\n                            fullWidth={true}\r\n                            name={input.name}\r\n                            handleChange={(e:any) => handlechange(e, data)}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </>\r\n              ))}\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"center\" direction=\"row\" spacing={6}>\r\n              <Grid item>\r\n                <ButtonComponent\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  handleSubmit={handleSubmit}\r\n                >\r\n                  save\r\n                </ButtonComponent>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonComponent\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  handleSubmit={handleClose}\r\n                >\r\n                  Cancel\r\n                </ButtonComponent>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formmodal;\r\nfunction data(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, data: any): void {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}