{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srikanth\\\\Downloads\\\\tsconfig\\\\src\\\\components\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Typography, Grid, Container } from \"@material-ui/core\";\nimport logo from \"../assets/logo.png\";\nimport LoginData from \"../pages/LoginData.json\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../UI/components/Button/Button\";\nimport InputField from \"../UI/components/TextField/InputField\";\nimport { connect } from \"react-redux\";\nimport { userActions } from \"../redux/_actions\"; // import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(3),\n    marginTop: \"100px\",\n    backgroundColor: \"white\"\n  },\n  logo: {\n    width: \"100px\",\n    height: \"43px\",\n    marginLeft: \"124px\"\n  },\n  typo: { ...theme.typography.body2,\n    margin: \"10px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  input: {\n    width: \"100%\",\n    borderRadius: \"5px\",\n    height: \"38px\",\n    fontSize: \"15px\"\n  },\n  btn: {\n    width: \"100%\",\n    textTransform: \"none\"\n  }\n}));\n\nconst Login = ({\n  Login,\n  isAuth\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [ErrorMessage, setErrorMessage] = useState(\"\");\n  const [logindata, setlogindata] = useState(LoginData);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var array = [];\n    let errors = {}; // eslint-disable-next-line array-callback-return\n\n    logindata.map(item => {\n      if (item.value === \"\" || item.value !== \"\" && item.value.length < 3 || item.value.length > 10) {\n        item.errState = true; // errors[item.name] = \"validation Error\";\n      }\n\n      array.push(item);\n    });\n    setlogindata(array);\n    let payload = {\n      username: logindata[0].value,\n      password: logindata[1].value\n    };\n    Login(payload); // if (logindata[0].value === \"user\" && logindata[1].value === \"user\") {\n    //     history.push(\"/dashboard\");\n    // } else if (\n    //     logindata[0].value === \"admin\" &&\n    //     logindata[1].value === \"admin\"\n    // ) {\n    //     // eslint-disable-next-line no-restricted-globals\n    //     history.push(\"/dashboard\");\n    //     localStorage.setItem(\"username\", logindata[0].value);\n    // } else if (logindata[0].value === \"\" && logindata[1].value === \"\") {\n    //     setErrorMessage(\"Invalid username or password\");\n    // } else {\n    //     setErrorMessage(\"Invalid username or password\");\n    // }\n    // const newinputformelems:any = logindata.map(each=> each.value = \"\");\n    // setlogindata(newinputformelems);\n  };\n\n  const handlechange = (info, e) => {\n    var array = []; // eslint-disable-next-line array-callback-return\n\n    logindata.map(item => {\n      if (item.name === info.name) {\n        item.value = e.target.value;\n        if (item.value !== \"\") item.errState = false;\n      }\n\n      array.push(item);\n    });\n    setlogindata(array);\n  };\n\n  const handleBlur = (info, e) => {\n    var array = []; // eslint-disable-next-line array-callback-return\n\n    logindata.map(item => {\n      if (item.name === info.name) {\n        if (item.value === \"\" || item.value !== \"\" && item.value.length < 3 || item.value.length > 10) {\n          item.errState = true;\n        } else item.errState = false;\n      }\n\n      array.push(item);\n    }); // setlogindata(array);\n  };\n\n  React.useEffect(() => {\n    if (isAuth) {\n      let data = localStorage.getItem(\"user\");\n\n      if (JSON.parse(String(data))) {\n        history.push(\"/dashboard\");\n      }\n    }\n  }, [isAuth]); //   console.log(isAuth)\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"mhk\",\n      className: classes.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      align: \"center\",\n      children: \"Welcome to MHK Admin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"primary\",\n      align: \"center\",\n      children: \"Please sign to get access.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"secondary\",\n      align: \"center\",\n      children: ErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: logindata.map(input => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              style: {\n                marginTop: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: input.textlabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(InputField, {\n                  handleChange: e => handlechange(input, e),\n                  value: input.value,\n                  handleBlur: e => handleBlur(input, e),\n                  type: input.type,\n                  fullWidth: true,\n                  size: \"small\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), input.errState ? /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"secondary\",\n                  children: input.value === \"\" ? input.errEmptyMsg : input.value.length < 3 ? input.errMinMsg : input.value.length > 10 ? input.errMaxMsg : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            fullWidth: true,\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"H834CcNiUJqSbZuGCSx1kFP/UVs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\n\nconst mapState = state => {\n  const {\n    isAuth\n  } = state.authentication;\n  return {\n    isAuth\n  };\n};\n\nconst connectedLoginPage = connect(mapState, {\n  Login: userActions.login\n})(Login);\nexport { connectedLoginPage as Login }; // export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/srikanth/Downloads/tsconfig/src/components/Login.tsx"],"names":["React","useState","makeStyles","Typography","Grid","Container","logo","LoginData","useHistory","Button","InputField","connect","userActions","useStyles","theme","container","padding","spacing","marginTop","backgroundColor","width","height","marginLeft","typo","typography","body2","margin","display","justifyContent","input","borderRadius","fontSize","btn","textTransform","Login","isAuth","classes","history","ErrorMessage","setErrorMessage","logindata","setlogindata","handleSubmit","e","preventDefault","array","errors","map","item","value","length","errState","push","payload","username","password","handlechange","info","name","target","handleBlur","useEffect","data","localStorage","getItem","JSON","parse","String","textlabel","type","errEmptyMsg","errMinMsg","errMaxMsg","mapState","state","authentication","connectedLoginPage","login"],"mappings":"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","sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { makeStyles, Typography, Grid, Container } from \"@material-ui/core\";\r\nimport logo from \"../assets/logo.png\";\r\nimport LoginData from \"../pages/LoginData.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"../UI/components/Button/Button\";\r\nimport InputField from \"../UI/components/TextField/InputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions } from \"../redux/_actions\";\r\n// import axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n    marginTop: \"100px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  logo: {\r\n    width: \"100px\",\r\n    height: \"43px\",\r\n    marginLeft: \"124px\",\r\n  },\r\n  typo: {\r\n    ...theme.typography.body2,\r\n    margin: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    borderRadius: \"5px\",\r\n    height: \"38px\",\r\n    fontSize: \"15px\",\r\n  },\r\n  btn: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n}));\r\n\r\ninterface IPorps {\r\n  Login: (payload: any) => void;\r\n  isAuth: boolean;\r\n}\r\n\r\nconst Login: FC<IPorps> = ({ Login, isAuth }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [ErrorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [logindata, setlogindata] = useState(LoginData);\r\n\r\n  const handleSubmit = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    var array: any[] = [];\r\n    let errors = {};\r\n    // eslint-disable-next-line array-callback-return\r\n    logindata.map((item: { value: string | any[]; errState: boolean }) => {\r\n      if (\r\n        item.value === \"\" ||\r\n        (item.value !== \"\" && item.value.length < 3) ||\r\n        item.value.length > 10\r\n      ) {\r\n        item.errState = true;\r\n        // errors[item.name] = \"validation Error\";\r\n      }\r\n      array.push(item);\r\n    });\r\n    setlogindata(array);\r\n\r\n    let payload = {\r\n      username: logindata[0].value,\r\n      password: logindata[1].value,\r\n    };\r\n\r\n    Login(payload);\r\n    // if (logindata[0].value === \"user\" && logindata[1].value === \"user\") {\r\n    //     history.push(\"/dashboard\");\r\n\r\n    // } else if (\r\n    //     logindata[0].value === \"admin\" &&\r\n    //     logindata[1].value === \"admin\"\r\n    // ) {\r\n    //     // eslint-disable-next-line no-restricted-globals\r\n    //     history.push(\"/dashboard\");\r\n    //     localStorage.setItem(\"username\", logindata[0].value);\r\n    // } else if (logindata[0].value === \"\" && logindata[1].value === \"\") {\r\n    //     setErrorMessage(\"Invalid username or password\");\r\n    // } else {\r\n    //     setErrorMessage(\"Invalid username or password\");\r\n    // }\r\n    // const newinputformelems:any = logindata.map(each=> each.value = \"\");\r\n    // setlogindata(newinputformelems);\r\n  };\r\n\r\n  const handlechange = (\r\n    info: { name: string },\r\n    e: { target: { value: string } }\r\n  ) => {\r\n    var array: (\r\n      | {\r\n          name: string;\r\n          textlabel: string;\r\n          errState: boolean;\r\n          variant: string;\r\n          fullWidth: boolean;\r\n          errEmptyMsg: string;\r\n          xs: number;\r\n          sm: number;\r\n          errMinMsg: string;\r\n          errMaxMsg: string;\r\n          value: string;\r\n          type?: undefined;\r\n        }\r\n      | {\r\n          name: string;\r\n          textlabel: string;\r\n          errState: boolean;\r\n          type: string;\r\n          variant: string;\r\n          fullWidth: boolean;\r\n          errEmptyMsg: string;\r\n          xs: number;\r\n          sm: number;\r\n          errMinMsg: string;\r\n          errMaxMsg: string;\r\n          value: string;\r\n        }\r\n    )[] = [];\r\n    // eslint-disable-next-line array-callback-return\r\n    logindata.map(\r\n      (\r\n        item:\r\n          | {\r\n              name: string;\r\n              textlabel: string;\r\n              errState: boolean;\r\n              variant: string;\r\n              fullWidth: boolean;\r\n              errEmptyMsg: string;\r\n              xs: number;\r\n              sm: number;\r\n              errMinMsg: string;\r\n              errMaxMsg: string;\r\n              value: string;\r\n              type?: undefined;\r\n            }\r\n          | {\r\n              name: string;\r\n              textlabel: string;\r\n              errState: boolean;\r\n              type: string;\r\n              variant: string;\r\n              fullWidth: boolean;\r\n              errEmptyMsg: string;\r\n              xs: number;\r\n              sm: number;\r\n              errMinMsg: string;\r\n              errMaxMsg: string;\r\n              value: string;\r\n            }\r\n      ) => {\r\n        if (item.name === info.name) {\r\n          item.value = e.target.value;\r\n          if (item.value !== \"\") item.errState = false;\r\n        }\r\n        array.push(item);\r\n      }\r\n    );\r\n    setlogindata(array);\r\n  };\r\n\r\n  const handleBlur = (\r\n    info: any,\r\n    e: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    var array: any[] = [];\r\n    // eslint-disable-next-line array-callback-return\r\n    logindata.map(\r\n      (item: { name: string; value: string | any[]; errState: boolean }) => {\r\n        if (item.name === info.name) {\r\n          if (\r\n            item.value === \"\" ||\r\n            (item.value !== \"\" && item.value.length < 3) ||\r\n            item.value.length > 10\r\n          ) {\r\n            item.errState = true;\r\n          } else item.errState = false;\r\n        }\r\n        array.push(item);\r\n      }\r\n    );\r\n    // setlogindata(array);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isAuth) {\r\n      let data = localStorage.getItem(\"user\");\r\n\r\n      if (JSON.parse(String(data))) {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    }\r\n  }, [isAuth]);\r\n  //   console.log(isAuth)\r\n  return (\r\n    <Container className={classes.container} maxWidth=\"xs\">\r\n      <img src={logo} alt=\"mhk\" className={classes.logo} />\r\n      <Typography variant=\"h5\" color=\"primary\" align=\"center\">\r\n        Welcome to MHK Admin.\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\r\n        Please sign to get access.\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"secondary\" align=\"center\">\r\n        {ErrorMessage}\r\n      </Typography>\r\n      <br />\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            {logindata.map(\r\n              (\r\n                input:\r\n                  | {\r\n                      name: string;\r\n                      textlabel: string;\r\n                      errState: boolean;\r\n                      variant: string;\r\n                      fullWidth: boolean;\r\n                      errEmptyMsg: string;\r\n                      xs: number;\r\n                      sm: number;\r\n                      errMinMsg: string;\r\n                      errMaxMsg: string;\r\n                      value: string;\r\n                      type?: undefined;\r\n                    }\r\n                  | {\r\n                      name: string;\r\n                      textlabel: string;\r\n                      errState: boolean;\r\n                      type: string;\r\n                      variant: string;\r\n                      fullWidth: boolean;\r\n                      errEmptyMsg: string;\r\n                      xs: number;\r\n                      sm: number;\r\n                      errMinMsg: string;\r\n                      errMaxMsg: string;\r\n                      value: string;\r\n                    }\r\n              ) => (\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">{input.textlabel}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <InputField\r\n                        handleChange={(e: any) => handlechange(input, e)}\r\n                        value={input.value}\r\n                        handleBlur={(e: any) => handleBlur(input, e)}\r\n                        type={input.type}\r\n                        fullWidth={true}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                      {input.errState ? (\r\n                        <Typography color=\"secondary\">\r\n                          {input.value === \"\"\r\n                            ? input.errEmptyMsg\r\n                            : input.value.length < 3\r\n                            ? input.errMinMsg\r\n                            : input.value.length > 10\r\n                            ? input.errMaxMsg\r\n                            : null}\r\n                        </Typography>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              type=\"submit\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapState = (state: any) => {\r\n  const { isAuth } = state.authentication;\r\n  return { isAuth };\r\n};\r\n\r\nconst connectedLoginPage = connect(mapState, { Login: userActions.login })(\r\n  Login\r\n);\r\nexport { connectedLoginPage as Login };\r\n// export default Login;\r\n"]},"metadata":{},"sourceType":"module"}