{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srikanth\\\\Downloads\\\\tsconfig\\\\src\\\\components\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Typography, Grid, Container } from \"@material-ui/core\";\nimport logo from \"../assets/logo.png\";\nimport LoginData from \"../pages/LoginData.json\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from '../UI/components/Button/Button';\nimport InputField from \"../UI/components/TextField/InputField\";\nimport { connect } from \"react-redux\";\nimport { userActions } from \"../redux/_actions\"; // import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(3),\n    marginTop: \"100px\",\n    backgroundColor: \"white\"\n  },\n  logo: {\n    width: \"100px\",\n    height: \"43px\",\n    marginLeft: \"124px\"\n  },\n  typo: { ...theme.typography.body2,\n    margin: \"10px\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  input: {\n    width: \"100%\",\n    borderRadius: \"5px\",\n    height: \"38px\",\n    fontSize: \"15px\"\n  },\n  btn: {\n    width: \"100%\",\n    textTransform: \"none\"\n  }\n}));\n\nconst Login = ({\n  Login\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [ErrorMessage, setErrorMessage] = useState(\"\");\n  const [logindata, setlogindata] = useState(LoginData);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var array = [];\n    let errors = {}; // eslint-disable-next-line array-callback-return\n\n    logindata.map(item => {\n      if (item.value === \"\" || item.value !== \"\" && item.value.length < 3 || item.value.length > 10) {\n        item.errState = true; // errors[item.name] = \"validation Error\";\n      }\n\n      array.push(item);\n    });\n    setlogindata(array);\n    let payload = {\n      username: logindata[0].value,\n      password: logindata[1].value\n    };\n    Login(payload); // if (logindata[0].value === \"user\" && logindata[1].value === \"user\") {\n    //     history.push(\"/dashboard\");\n    // } else if (\n    //     logindata[0].value === \"admin\" &&\n    //     logindata[1].value === \"admin\"\n    // ) {\n    //     // eslint-disable-next-line no-restricted-globals\n    //     history.push(\"/dashboard\");\n    //     localStorage.setItem(\"username\", logindata[0].value);\n    // } else if (logindata[0].value === \"\" && logindata[1].value === \"\") {\n    //     setErrorMessage(\"Invalid username or password\");\n    // } else {\n    //     setErrorMessage(\"Invalid username or password\");\n    // }\n    // const newinputformelems:any = logindata.map(each=> each.value = \"\");\n    // setlogindata(newinputformelems);\n  };\n\n  const handlechange = (info, e) => {\n    var array = []; // eslint-disable-next-line array-callback-return\n\n    logindata.map(item => {\n      if (item.name === info.name) {\n        item.value = e.target.value;\n        if (item.value !== \"\") item.errState = false;\n      }\n\n      array.push(item);\n    });\n    setlogindata(array);\n  };\n\n  const handleBlur = (info, e) => {\n    var array = []; // eslint-disable-next-line array-callback-return\n\n    logindata.map(item => {\n      if (item.name === info.name) {\n        if (item.value === \"\" || item.value !== \"\" && item.value.length < 3 || item.value.length > 10) {\n          item.errState = true;\n        } else item.errState = false;\n      }\n\n      array.push(item);\n    }); // setlogindata(array);\n  };\n\n  React.useEffect(() => {\n    let data = localStorage.getItem(\"user\");\n\n    if (data === null || data === void 0 ? void 0 : data.token) {\n      history.push(\"/dashboard\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"mhk\",\n      className: classes.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      align: \"center\",\n      children: \"Welcome to MHK Admin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"primary\",\n      align: \"center\",\n      children: \"Please sign to get access.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"secondary\",\n      align: \"center\",\n      children: ErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: logindata.map(input => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              style: {\n                marginTop: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: input.textlabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(InputField, {\n                  handleChange: e => handlechange(input, e),\n                  value: input.value,\n                  handleBlur: e => handleBlur(input, e),\n                  type: input.type,\n                  fullWidth: true,\n                  size: \"small\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 41\n                }, this), input.errState ? /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"secondary\",\n                  children: input.value === \"\" ? input.errEmptyMsg : input.value.length < 3 ? input.errMinMsg : input.value.length > 10 ? input.errMaxMsg : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 45\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            fullWidth: true,\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"H834CcNiUJqSbZuGCSx1kFP/UVs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\n\nconst mapState = state => {\n  const {\n    loggingIn\n  } = state.authentication;\n  return {\n    loggingIn\n  };\n};\n\nconst connectedLoginPage = connect(mapState, {\n  Login: userActions.login\n})(Login);\nexport { connectedLoginPage as Login }; // export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/srikanth/Downloads/tsconfig/src/components/Login.tsx"],"names":["React","useState","makeStyles","Typography","Grid","Container","logo","LoginData","useHistory","Button","InputField","connect","userActions","useStyles","theme","container","padding","spacing","marginTop","backgroundColor","width","height","marginLeft","typo","typography","body2","margin","display","justifyContent","input","borderRadius","fontSize","btn","textTransform","Login","classes","history","ErrorMessage","setErrorMessage","logindata","setlogindata","handleSubmit","e","preventDefault","array","errors","map","item","value","length","errState","push","payload","username","password","handlechange","info","name","target","handleBlur","useEffect","data","localStorage","getItem","token","textlabel","type","errEmptyMsg","errMinMsg","errMaxMsg","mapState","state","loggingIn","authentication","connectedLoginPage","login"],"mappings":"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","sourcesContent":["import React, { FC,useState } from \"react\";\r\nimport {\r\n    makeStyles,\r\n    Typography,\r\n    Grid,\r\n    Container\r\n} from \"@material-ui/core\";\r\nimport logo from \"../assets/logo.png\";\r\nimport LoginData from \"../pages/LoginData.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../UI/components/Button/Button';\r\nimport InputField from \"../UI/components/TextField/InputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions } from \"../redux/_actions\";\r\n// import axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: theme.spacing(3),\r\n        marginTop: \"100px\",\r\n        backgroundColor: \"white\",\r\n    },\r\n    logo: {\r\n        width: \"100px\",\r\n        height: \"43px\",\r\n        marginLeft: \"124px\",\r\n    },\r\n    typo: {\r\n        ...theme.typography.body2,\r\n        margin: \"10px\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n        borderRadius: \"5px\",\r\n        height: \"38px\",\r\n        fontSize: \"15px\",\r\n    },\r\n    btn: {\r\n        width: \"100%\",\r\n        textTransform: \"none\",\r\n    },\r\n}));\r\n\r\n\r\ninterface IPorps {\r\n    Login:(payload:any)=>void\r\n  }\r\n\r\nconst Login:FC<IPorps>= ({Login}) => {\r\n   const classes = useStyles();\r\n    const history = useHistory();\r\n    const [ErrorMessage, setErrorMessage] = useState<string>(\"\");\r\n    const [logindata, setlogindata] = useState(LoginData);\r\n\r\n    const handleSubmit = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        var array: any[] = [];\r\n        let errors = {};\r\n        // eslint-disable-next-line array-callback-return\r\n        logindata.map((item: { value: string | any[]; errState: boolean; }) => {\r\n            if (\r\n                item.value === \"\" ||\r\n                (item.value !== \"\" && item.value.length < 3) ||\r\n                item.value.length > 10\r\n            ) {\r\n                item.errState = true;\r\n                // errors[item.name] = \"validation Error\";\r\n            }\r\n            array.push(item);\r\n        });\r\n        setlogindata(array)\r\n       \r\n         let payload={\r\n              username:logindata[0].value,\r\n              password:logindata[1].value\r\n         }\r\n\r\n         Login(payload)\r\n        // if (logindata[0].value === \"user\" && logindata[1].value === \"user\") {\r\n        //     history.push(\"/dashboard\");\r\n          \r\n        // } else if (\r\n        //     logindata[0].value === \"admin\" &&\r\n        //     logindata[1].value === \"admin\"\r\n        // ) {\r\n        //     // eslint-disable-next-line no-restricted-globals\r\n        //     history.push(\"/dashboard\");\r\n        //     localStorage.setItem(\"username\", logindata[0].value);\r\n        // } else if (logindata[0].value === \"\" && logindata[1].value === \"\") {\r\n        //     setErrorMessage(\"Invalid username or password\");\r\n        // } else {\r\n        //     setErrorMessage(\"Invalid username or password\");\r\n        // }\r\n        // const newinputformelems:any = logindata.map(each=> each.value = \"\");\r\n        // setlogindata(newinputformelems);\r\n        \r\n    };\r\n\r\n    const handlechange = (info: { name: string; }, e: { target: { value: string; }; }) => {\r\n        var array: ({\r\n            name: string; textlabel: string; errState: boolean; variant: string;\r\n            fullWidth: boolean; errEmptyMsg: string; xs: number; sm: number; errMinMsg: string;\r\n            errMaxMsg: string; value: string; type?: undefined;\r\n        } | {\r\n            name: string; textlabel: string;\r\n            errState: boolean; type: string; variant: string; fullWidth: boolean; errEmptyMsg: string;\r\n            xs: number; sm: number; errMinMsg: string; errMaxMsg: string; value: string;\r\n        })[] = [];\r\n        // eslint-disable-next-line array-callback-return\r\n        logindata.map((item: { name: string; textlabel: string; errState: boolean; variant: string; fullWidth: boolean; errEmptyMsg: string; xs: number; sm: number; errMinMsg: string; errMaxMsg: string; value: string; type?: undefined; } | { name: string; textlabel: string; errState: boolean; type: string; variant: string; fullWidth: boolean; errEmptyMsg: string; xs: number; sm: number; errMinMsg: string; errMaxMsg: string; value: string; }) => {\r\n            if (item.name === info.name) {\r\n                item.value = e.target.value;\r\n                if (item.value !== \"\") item.errState = false;\r\n            }\r\n            array.push(item);\r\n        });\r\n        setlogindata(array);\r\n    };\r\n\r\n    const handleBlur = (info:any, e: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        var array: any[] = [];\r\n        // eslint-disable-next-line array-callback-return\r\n        logindata.map((item: { name: string; value: string | any[]; errState: boolean; }) => {\r\n            if (item.name === info.name) {\r\n                if (\r\n                    item.value === \"\" ||\r\n                    (item.value !== \"\" && item.value.length < 3) ||\r\n                    item.value.length > 10\r\n                ) {\r\n                    item.errState = true;\r\n                } else item.errState = false;\r\n            }\r\n            array.push(item);\r\n        });\r\n        // setlogindata(array);\r\n    };\r\n\r\n\r\n     React.useEffect(()=>{\r\n          let data= localStorage.getItem(\"user\")\r\n           \r\n if(data?.token){\r\n    history.push(\"/dashboard\");\r\n }\r\n     },[])\r\n    return (\r\n        <Container className={classes.container} maxWidth=\"xs\">\r\n            <img src={logo} alt=\"mhk\" className={classes.logo} />\r\n            <Typography variant=\"h5\" color=\"primary\" align=\"center\">\r\n                Welcome to MHK Admin.\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary\" align=\"center\">\r\n                Please sign to get access.\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"secondary\" align=\"center\">\r\n                {ErrorMessage}\r\n            </Typography>\r\n            <br />\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        {logindata.map((input: { name: string; textlabel: string; errState: boolean; variant: string; fullWidth: boolean; errEmptyMsg: string; xs: number; sm: number; errMinMsg: string; errMaxMsg: string; value: string; type?: undefined; } | { name: string; textlabel: string; errState: boolean; type: string; variant: string; fullWidth: boolean; errEmptyMsg: string; xs: number; sm: number; errMinMsg: string; errMaxMsg: string; value: string; }) => (\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\" style={{ marginTop: '10px' }}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"body1\">\r\n                                            {input.textlabel}\r\n                                        </Typography>\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <InputField\r\n                                           handleChange={(e:any) => handlechange(input, e)}\r\n                                            value={input.value}\r\n                                            handleBlur={(e:any) => handleBlur(input, e)}\r\n                                            type={input.type}\r\n                                            fullWidth={true}\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                           \r\n\r\n                                        />\r\n                                        {input.errState ? (\r\n                                            <Typography color=\"secondary\">\r\n                                                {input.value === \"\"\r\n                                                    ? input.errEmptyMsg\r\n                                                    : input.value.length < 3\r\n                                                        ? input.errMinMsg\r\n                                                        : input.value.length > 10\r\n                                                            ? input.errMaxMsg\r\n                                                            : null}\r\n                                            </Typography>\r\n                                        ) : null}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button \r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        fullWidth={true}\r\n                        type=\"submit\"\r\n                        \r\n                        >\r\n                            Sign In\r\n                         </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst  mapState=(state:any)=> {\r\n    const { loggingIn } = state.authentication;\r\n    return { loggingIn };\r\n}\r\n\r\n\r\nconst connectedLoginPage = connect(mapState, { Login: userActions.login})(Login);\r\nexport { connectedLoginPage as Login };\r\n// export default Login;"]},"metadata":{},"sourceType":"module"}