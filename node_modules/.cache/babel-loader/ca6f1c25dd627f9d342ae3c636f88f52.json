{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srikanth\\\\Downloads\\\\tsconfig\\\\src\\\\components\\\\Sidebar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, List, ListItem, ListItemText, ListItemIcon, Typography } from \"@material-ui/core\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { MenuItems, UserMenuItems, RoleItems, UserItems } from \"../pages/SidebarData\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  list: {\n    width: \"100%\",\n    maxWidth: \"264px\",\n    backgroundColor: \"#c7c0c0\",\n    color: \"#f3e7e7eb\",\n    height: \"100%\"\n  },\n  listitem: {\n    borderBottom: \"2px solid #696161\"\n  },\n  text: {\n    fontSize: \"13px\",\n    color: \"#e2e4ea\",\n    fontFamily: \"Roboto\"\n  },\n  typo: {\n    color: \"#e2e4ea\",\n    fontFamily: \"Roboto\",\n    fontSize: \"13px\"\n  },\n  root: {\n    margin: \"5px\",\n    \"&:hover\": {\n      backgroundColor: \"#675f5f\",\n      borderRadius: \"5px\"\n    }\n  },\n  itemicon: {\n    minWidth: \"35px\"\n  }\n}));\n\nconst Sidebar = () => {\n  _s();\n\n  const classes = useStyles();\n  const [userdropdown, setuserDropdown] = useState(false);\n  const [admindropdown, setadminDropdown] = useState(false);\n  const username = localStorage.getItem(\"username\");\n\n  const handleClick = () => {\n    setuserDropdown(userdropdown => !userdropdown);\n  };\n\n  const handleClick1 = () => {\n    setadminDropdown(admindropdown => !admindropdown);\n  };\n\n  const adminmenu = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.list,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"main mailbox folders\",\n      children: MenuItems.map(item => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: item.userdropdown ? /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: handleClick1,\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              className: classes.listitem,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), admindropdown && RoleItems.map((item, index) => {\n              console.log(\"item\", item);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  className: classes.text,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    style: {\n                      color: \"#fff\"\n                    },\n                    children: item.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.text,\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            className: classes.listitem,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.text,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  const handleuser = e => {\n    e.preventDefault();\n    window.location.href = \"/dashboard\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: username === \"user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.list,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        \"aria-label\": \"main mailbox folders\",\n        children: UserMenuItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: !item.userdropdown && !item.admindropdown ? /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              className: classes.listitem,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                className: classes.itemicon,\n                children: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.typo,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [item.userdropdown && /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: handleClick,\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  className: classes.listitem,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    className: classes.itemicon,\n                    children: item.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.text,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 27\n                }, this), userdropdown && UserItems.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.root,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        button: true,\n                        className: classes.text,\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          style: {\n                            color: \"#fff\"\n                          },\n                          className: classes.itemicon,\n                          children: item.icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.text,\n                            onClick: handleuser,\n                            children: item.title\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 188,\n                            columnNumber: 43\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 39\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 33\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this), item.admindropdown && /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: handleClick1,\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  className: classes.listitem,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    className: classes.itemicon,\n                    children: item.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.text,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 27\n                }, this), admindropdown && RoleItems.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.root,\n                    children: /*#__PURE__*/_jsxDEV(ListItem, {\n                      button: true,\n                      className: classes.text,\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        style: {\n                          color: \"#fff\"\n                        },\n                        className: classes.itemicon,\n                        children: item.icon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Typography, {\n                          className: classes.text,\n                          onClick: handleuser,\n                          children: item.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 37\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 33\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : adminmenu\n  }, void 0, false);\n};\n\n_s(Sidebar, \"0EHdpOZvK/JFrW/H5FLkrqNwKJI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/srikanth/Downloads/tsconfig/src/components/Sidebar.tsx"],"names":["React","useState","makeStyles","List","ListItem","ListItemText","ListItemIcon","Typography","ArrowDropDownIcon","MenuItems","UserMenuItems","RoleItems","UserItems","useStyles","list","width","maxWidth","backgroundColor","color","height","listitem","borderBottom","text","fontSize","fontFamily","typo","root","margin","borderRadius","itemicon","minWidth","Sidebar","classes","userdropdown","setuserDropdown","admindropdown","setadminDropdown","username","localStorage","getItem","handleClick","handleClick1","adminmenu","map","item","icon","name","index","console","log","title","handleuser","e","preventDefault","window","location","href"],"mappings":"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","sourcesContent":["import React, {FC, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport {\r\n  MenuItems,\r\n  UserMenuItems,\r\n  RoleItems,\r\n  UserItems,\r\n} from \"../pages/SidebarData\";\r\nimport \"../App.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    width: \"100%\",\r\n    maxWidth: \"264px\",\r\n    backgroundColor: \"#c7c0c0\",\r\n    color: \"#f3e7e7eb\",\r\n    height: \"100%\",\r\n  },\r\n  listitem: {\r\n    borderBottom: \"2px solid #696161\",\r\n  },\r\n  text: {\r\n    fontSize: \"13px\",\r\n    color: \"#e2e4ea\",\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  typo: {\r\n    color: \"#e2e4ea\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"13px\",\r\n  },\r\n  root: {\r\n    margin: \"5px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#675f5f\",\r\n      borderRadius: \"5px\",\r\n    },\r\n  },\r\n  itemicon: {\r\n    minWidth: \"35px\",\r\n  },\r\n}));\r\n\r\nconst Sidebar:FC=()=> {\r\n  const classes = useStyles();\r\n  const [userdropdown, setuserDropdown] = useState(false);\r\n  const [admindropdown, setadminDropdown] = useState(false);\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  const handleClick = () => {\r\n    setuserDropdown((userdropdown) => !userdropdown);\r\n  };\r\n\r\n  const handleClick1 = () => {\r\n    setadminDropdown((admindropdown) => !admindropdown);\r\n  };\r\n\r\n  const adminmenu = (\r\n    <div className={classes.list}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {MenuItems.map((item) => {\r\n          return (\r\n            <>\r\n              {item.userdropdown ? (\r\n                <li onClick={handleClick1}>\r\n                  <ListItem button className={classes.listitem}>\r\n                    <ListItemIcon>{item.icon}</ListItemIcon>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography className={classes.text}>\r\n                          {item.name}\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                    <ArrowDropDownIcon />\r\n                  </ListItem>\r\n                  {admindropdown &&\r\n                    RoleItems.map((item, index) => {\r\n                      console.log(\"item\", item);\r\n                      return (\r\n                        <div className={classes.root}>\r\n                          <ListItem button className={classes.text} key={index}>\r\n                            <ListItemIcon style={{ color: \"#fff\" }}>\r\n                              {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography className={classes.text}>\r\n                                  {item.title}\r\n                                </Typography>\r\n                              }\r\n                            />\r\n                          </ListItem>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </li>\r\n              ) : (\r\n                <ListItem button className={classes.listitem}>\r\n                  <ListItemIcon>{item.icon}</ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography className={classes.text}>\r\n                        {item.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              )}\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleuser = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault();\r\n    window.location.href=\"/dashboard\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {username === \"user\" ? (\r\n        <div className={classes.list}>\r\n          <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            {UserMenuItems.map((item) => {\r\n              return (\r\n                <>\r\n                  {!item.userdropdown && !item.admindropdown ? (\r\n                    <ListItem button className={classes.listitem}>\r\n                      <ListItemIcon className={classes.itemicon}>\r\n                        {item.icon}\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography className={classes.typo}>\r\n                            {item.name}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ) : (\r\n                    <>\r\n                      {item.userdropdown && (\r\n                        <li onClick={handleClick}>\r\n                          <ListItem button className={classes.listitem}>\r\n                            <ListItemIcon className={classes.itemicon}>\r\n                              {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography className={classes.text}>\r\n                                  {item.name}\r\n                                </Typography>\r\n                              }\r\n                            />\r\n                            <div>\r\n                              <ArrowDropDownIcon />\r\n                            </div>\r\n                          </ListItem>\r\n                          {userdropdown &&\r\n                            UserItems.map((item, index) => {\r\n                              return (\r\n                                <div className={classes.root}>\r\n                                  <div>\r\n                                    <ListItem\r\n                                      button\r\n                                      className={classes.text}\r\n                                      key={index}\r\n                                    >\r\n                                      <ListItemIcon\r\n                                        style={{ color: \"#fff\" }}\r\n                                        className={classes.itemicon}\r\n                                      >\r\n                                        {item.icon}\r\n                                      </ListItemIcon>\r\n                                      <ListItemText\r\n                                       primary={\r\n                                          <Typography\r\n                                            className={classes.text}\r\n                                            onClick={handleuser}\r\n                                          >\r\n                                            {item.title}\r\n                                          </Typography>\r\n                                        }\r\n                                      />\r\n                                    </ListItem>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </li>\r\n                      )}\r\n\r\n                      {item.admindropdown && (\r\n                        <li onClick={handleClick1}>\r\n                          <ListItem button className={classes.listitem}>\r\n                            <ListItemIcon className={classes.itemicon}>\r\n                              {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography className={classes.text}>\r\n                                  {item.name}\r\n                                </Typography>\r\n                              }\r\n                            />\r\n                            <ArrowDropDownIcon />\r\n                          </ListItem>\r\n                          {admindropdown &&\r\n                            RoleItems.map((item, index) => {\r\n                              return (\r\n                                <div className={classes.root}>\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.text}\r\n                                    key={index}\r\n                                  >\r\n                                    <ListItemIcon\r\n                                      style={{ color: \"#fff\" }}\r\n                                      className={classes.itemicon}\r\n                                    >\r\n                                      {item.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                      primary={\r\n                                        <Typography\r\n                                          className={classes.text}\r\n                                          onClick={handleuser}\r\n                                        >\r\n                                          {item.title}\r\n                                        </Typography>\r\n                                      }\r\n                                    />\r\n                                  </ListItem>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </li>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      ) : (\r\n        adminmenu\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}