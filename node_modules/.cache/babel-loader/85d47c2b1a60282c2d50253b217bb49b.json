{"ast":null,"code":"import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './alert.actions';\nimport { history } from '../_helpers';\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nexport const userActions = {\n  login\n};\n\nfunction login(payload) {\n  return dispatch => {\n    // dispatch(request({ username }));\n    userService.login(payload).then(user => {\n      dispatch(success(user));\n      history.push('/dashboard');\n    }, error => {\n      message.error('This is an error message');\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/srikanth/Downloads/tsconfig/src/redux/_actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","message","userActions","login","payload","dispatch","then","user","success","push","error","failure","toString","request","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAyB,MAAzB;AACA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA;AADuB,CAApB;;AAKP,SAASA,KAAT,CAAeC,OAAf,EAAwB;AACpB,SAAOC,QAAQ,IAAI;AACf;AAEAP,IAAAA,WAAW,CAACK,KAAZ,CAAkBC,OAAlB,EACKE,IADL,CAEQC,IAAI,IAAI;AACJF,MAAAA,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR;AACAP,MAAAA,OAAO,CAACS,IAAR,CAAa,YAAb;AACH,KALT,EAMQC,KAAK,IAAI;AACLT,MAAAA,OAAO,CAACS,KAAR,CAAc,0BAAd;AACAL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACAP,MAAAA,QAAQ,CAACN,YAAY,CAACW,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACH,KAVT;AAYH,GAfD;;AAiBA,WAASC,OAAT,CAAiBN,IAAjB,EAAuB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEjB,aAAa,CAACkB,aAAtB;AAAqCR,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEjB,aAAa,CAACmB,aAAtB;AAAqCT,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASI,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAEjB,aAAa,CAACoB,aAAtB;AAAqCP,MAAAA;AAArC,KAAP;AAAqD;AAClF","sourcesContent":["import { userConstants } from '../_constants';\r\nimport { userService } from '../_services';\r\nimport { alertActions } from './alert.actions';\r\nimport { history } from '../_helpers';\r\nimport 'antd/dist/antd.css';\r\nimport { message, } from 'antd';\r\nexport const userActions = {\r\n    login,\r\n   \r\n};\r\n\r\nfunction login(payload) {\r\n    return dispatch => {\r\n        // dispatch(request({ username }));\r\n\r\n        userService.login(payload)\r\n            .then(\r\n                user => { \r\n                    dispatch(success(user));\r\n                    history.push('/dashboard');\r\n                },\r\n                error => {\r\n                    message.error('This is an error message');\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}